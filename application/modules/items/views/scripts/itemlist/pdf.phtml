<?php
if(isset($this->template) && $this->template['filename'] && file_exists(BASE_PATH.'/templates/modules/items/itemlist/'.$this->template['filename'].'.phtml')) {
	include BASE_PATH.'/templates/modules/items/itemlist/'.$this->template['filename'].'.phtml';
} else {
	$this->title = 'Price List';
	$this->headTitle($this->title);

	//Config
	$client = $this->client;

	//Category
	$catid = $this->catid;

	//Items
	$itemlist = $this->itemlist;
	$itemlists = $this->itemlists;

	//Categories
	$categories = $this->options['categories'];

	//Attributes
	$attributes = $this->itemAttributes;

	//Options
	$options = $this->itemOptions;
	$optionSets = $this->itemOptionSets;

	//Params
	$params = $this->params;

	//TCPDF
	require_once(BASE_PATH.'/library/Tcpdf/config/tcpdf_config.php');
	require_once(BASE_PATH.'/library/Tcpdf/tcpdf.php');

	// create new PDF document
	$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

	// set document information
	$pdf->SetCreator(PDF_CREATOR);
	$pdf->SetAuthor(PDF_AUTHOR);
	$pdf->SetTitle($this->translate('ITEM'));
	$pdf->SetSubject($this->translate('ITEM'));

	// remove default header/footer
	$pdf->setPrintHeader(false);
	$pdf->setPrintFooter(false);

	// set default header data
	$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

	// set header and footer fonts
	$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
	$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

	// set default monospaced font
	$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

	//set display mode
	$pdf->SetDisplayMode('real', 'OneColumn');

	//set margins
	$pdf->SetMargins(15, 30, 15);

	//set auto page breaks
	$pdf->SetAutoPageBreak(true, 30);

	//set image scale factor
	$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

	// add a page
	$pdf->AddPage();
	$pageStart = $pdf->getPage();

	//Website
	if(isset($this->template) && $this->template['website']) {
		$website = $this->template['website'];
	} else {
		$website = $client['website'];
	}

	//Logo
	if(isset($this->template) && $this->template['logo'] && file_exists(BASE_PATH.'/files/images/'.$this->template['logo'])) {
		$logo = BASE_PATH.'/files/images/'.$this->template['logo'];
		$pdf->Image($logo, 65, 65, 80, 0, '', $website);
	}

	//Title
	$pdf->SetFont('freesansb', 'B', 14);
	$pdf->MultiCell(110, 0, $itemlist['title'], 0, 'C', false, 1, 50, 100);
	if($itemlist['subtitle']) {
		$pdf->SetFont('freesansb', 'B', 10);
		$pdf->MultiCell(110, 0, $itemlist['subtitle'], 0, 'C', false, 0, 50);
		$pdf->MultiCell(110, 4, '', array('B' => array('width' => 1, 'color' => array(20, 64, 96))), 'C', false, 1, 50);
	}

	//Image
	$dir1 = substr($client['id'], 0, 1);
	if(strlen($client['id']) > 1) $dir2 = substr($client['id'], 1, 1);
	else $dir2 = '0';
	$pathUploads = BASE_PATH.'/files/uploads/'.$dir1.'/'.$dir2.'/'.$client['id'].'/';
	if($itemlist['image'] && file_exists($pathUploads.$itemlist['image'])) {
		$image = $pathUploads.$itemlist['image'];
		$pdf->Image($image, 65, 150, 80, 0);
	}

	$pdf->AddPage();

	//HEADER

	//IMPORTANT INFORMATIONS
	/*$pdf->SetY(40);
	$pdf->setCellPaddings(0, 0, 0, 0);
	$pdf->SetFont('freesans', '', 9);
	$pdf->MultiCell(40, 5, $sku, 0, 'L', false, 1, 20);
	$pdf->MultiCell(40, 5, $title, 0, 'L', false, 1, 20);
	$pdf->MultiCell(80, 5, $description, 0, 'L', false, 1, 20);
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_SALES_PERSON'), 0, 'L', false, 1, 20);
	$pdf->ln(8);
	$y = $pdf->GetY();*/

	//Items
	if(count($itemlists)) {
		foreach($itemlists as $catid => $items) {
			$x = $pdf->GetX()+5;
			if(isset($categories[$catid]['childs'])) {
				getSubList($categories[$catid]['childs'], $categories, $pdf, $pathUploads, $items, $attributes, $options, $optionSets, $params[$catid]['rows']);
			} else {
				$i = 1;
				$pdf->setCellPaddings(0, 3, 0, 2);
				$pdf->SetFont('freesansb', 'B', 12);
				$pdf->MultiCell(0, 0, $categories[$catid]['title'], 0, 'L', false, 1, 20);
				$pdf->SetFont('freesans', '', 9);
				if($categories[$catid]['description']) {
					$pdf->MultiCell(120, 0, $categories[$catid]['description'], 0, 'L', false, 1, 20);
					$pdf->ln(4);
				}
				itemsHeader($pdf, $params[$catid]['rows']);
				foreach($items as $item) {
					if($item['catid'] == $catid) {
						if($pdf->GetY() > 240) {
							$pdf->AddPage();
							itemsHeader($pdf, $params[$catid]['rows']);
						}
						$pdf->setCellPaddings(2, 1, 0, 1);
						$pdf->SetFont('freesans', '', 8);
						$pdf->MultiCell(30, 0, $item['sku'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0, 20);
						$pdf->MultiCell(80, 0, $item['title'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
						if(isset($attributes[$item['id']][0])) $pdf->MultiCell(35, 0, $attributes[$item['id']][0]['description'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
						if(strpos($item['price'], '0') === 0) $item['price'] = 'Auf Anfrage';
						$pdf->MultiCell(30, 0, $item['price'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 1);
						++$i;
					}
				}
			}
		}
		$pdf->ln(10);
	}

	//PAGE HEADER AND FOOTER
	$i = 1;
	$y = $pdf->GetY();
	$lastPage = $pdf->getNumPages();
	while($i <= $lastPage) {
		$pdf->setPage($i);
		//Logo
		if($i > 1) {
			if(isset($logo)) {
				$pdf->Image($logo, 155, 10, 40, 0, '', $website);
			}

			$y = $pdf->GetY();
			$pdf->SetY(20);
		}

		$pdf->setCellPaddings(0, 2, 0, 2);
		$pdf->SetAutoPageBreak(false);

		//Title
		if(($i > 1) && $itemlist['title']) {
			$pdf->SetFont('freesansb', 'B', 14);
			$pdf->MultiCell(0, 0, $itemlist['title'], 0, 'L', false, 1, 20, 10);
			if($itemlist['subtitle']) {
				$pdf->SetFont('freesansb', 'B', 10);
				$pdf->MultiCell(0, 0, $itemlist['subtitle'], 0, 'L', false, 0, 20);
				$pdf->MultiCell(70, 4, '', array('B' => array('width' => 1, 'color' => array(20, 64, 96))), 'L', false, 1, 20);
				//$pdf->ln(4);
			}
		}

		//Footer
		$x = 12;
		$pdf->SetY(270);
		$pdf->SetFont('freesans', '', 7);
		if($i > 1) {
			foreach($this->footers as $footer) {
				$width = $footer->width ? $footer->width : 40;
				$pdf->MultiCell($width, 3, $footer->text, 0, 'L', false, 0, $x);
				$x += $width;
			}

			// Page number
			$pdf->SetY(284);
			$pdf->SetFont('helvetica', 'I', 8);
			$pdf->Cell(0, 10, $this->translate('DOCUMENTS_PAGE').' '.$pdf->getAliasNumPage().'/'.$pdf->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
			$pdf->SetFont('freesans', '', 8);
		} else {
			$pdf->SetY(278);
			$pdf->MultiCell(185, 0, '* Alle Angaben sind ohne Gewähr, Änderungen bleiben '.$this->client['company'].' vorbehalten.', 0, 'C', false, 1);
			$pdf->SetY(282);
			$pdf->MultiCell(185, 0, 'Unsere AGB´s finden Sie auf '.$this->client['website'], 0, 'C', false, 0);
		}

		$pdf->SetAutoPageBreak(true, 30);

		//$pdf->MultiCell(175, 230, '', array('LTBR' => array('width' => 1, 'color' => array(20, 64, 96))), 'L', false, 1, 20, 35);

		$pdf->SetY($y);
		++$i;
	}
}

//Close and output PDF document
if($this->action == 'download') {
	$pdf->Output(0, 'D');
} else {
	$path = BASE_PATH.'/files/items/';
	$dir1 = substr($client['id'], 0, 1);
	if(strlen($client['id']) > 1) $dir2 = substr($client['id'], 1, 1);
	else $dir2 = '0';
	$dir3 = substr($this->item['id'], 0, 1).'/';
	if(strlen($this->item['id']) > 1) $dir4 = substr($this->item['id'], 1, 1).'/';
	else $dir4 = '0/';
	$url = $dir1.'/'.$dir2.'/'.$client['id'].'/'.$dir3.'/'.$dir4.'/'.$this->item['id'].'/';
	if($itemid) {
		if(!file_exists($path.$url.$filename))
			$pdf->Output($path.$url.$filename, 'F');
		$html = '<iframe src="'.$this->baseUrl().'/files/items/'.$url.$filename.'?'.time().'" width="900px" height="500px">';
	} else {
		$pdf->Output(BASE_PATH.'/cache/item/'.$id.'.pdf', 'F');
		$html = '<iframe src="'.$this->baseUrl().'/cache/item/'.$id.'.pdf?'.time().'" width="900px" height="500px">';
	}
	echo $html;
}

function getSubList($childs, $categories, $pdf, $pathUploads, $items, $attributes, $options, $optionSets, $rows) {
	foreach($childs as $child) {
		$y = $pdf->GetY();
		if($y>150) {
			$pdf->AddPage();
		}
		$pdf->setCellPaddings(0, 3, 0, 2);
		$pdf->SetFont('freesansb', 'B', 16);
		$pdf->MultiCell(0, 0, $categories[$child]['title'], 0, 'L', false, 1, 20);
		if($categories[$child]['image'] && file_exists($pathUploads.$categories[$child]['image'])) {
			$image = $pathUploads.$categories[$child]['image'];
			$pdf->SetY($pdf->GetY()-5);
			$pdf->Image($image, 150, '', 50, 0);
		}
		$pdf->SetFont('freesans', '', 8);
		if($categories[$child]['description']) {
			$pdf->SetY($pdf->GetY()+2);
			$pdf->MultiCell(120, 50, $categories[$child]['description'], 0, 'L', false, 1, 20);
			$pdf->ln(2);
		}
		if(isset($categories[$child]['childs'])) {
			getSubList($categories[$child]['childs'], $categories, $pdf, $pathUploads, $items, $attributes, $options, $optionSets, $rows);
		} else {
			$i = 1;
			//ITEMS HEADER
			itemsHeader($pdf, $rows);
			$countItems = 0;
			foreach($items as $item) {
				if($item['catid'] == $child) {
					$y = $pdf->GetY();
					if($pdf->GetY() > 240) {
						$pdf->AddPage();
						itemsHeader($pdf, $rows);
					}
					$pdf->setCellPaddings(2, 1, 0, 1);
					$pdf->SetFont('freesans', '', 7);
					$i = 1;
					$lenght = count($rows);
					foreach($rows as $row) {
						if($row['type'] == 'row') {
							if(($row['name'] == 'price') && (strpos($item['price'], '0') === 0)) $item['price'] = 'Auf Anfrage';
							if($i==1) {
								$pdf->MultiCell($row['width'], 0, $item[$row['name']], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0, 20);
							} elseif(($i>1) && ($i<$lenght)) {
								$pdf->MultiCell($row['width'], 0, $item[$row['name']], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
							} elseif($i==$lenght) {
								$pdf->MultiCell($row['width'], 0, $item[$row['name']], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 1);
							}
						}
						if($row['type'] == 'attribute') {
							$value = '';
							foreach($attributes[$item['id']] as $attribute) {
								if($attribute['title'] == $row['name']) $value = $attribute['description'];
							}
							//$value = $attribute['title'].$row['name'];
							if($i==1) {
								$pdf->MultiCell($row['width'], 0, $value, array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0, 20);
							} elseif(($i>1) && ($i<$lenght)) {
								$pdf->MultiCell($row['width'], 0, $value, array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
							} elseif($i==$lenght) {
								$pdf->MultiCell($row['width'], 0, $value, array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 1);
							}
						}
						++$i;
					}
					//$pdf->MultiCell(30, 0, $item['sku'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0, 20);
					//$pdf->MultiCell(80, 0, $item['title'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
					//if(isset($attributes[$item['id']][0])) $pdf->MultiCell(35, 0, $attributes[$item['id']][0]['description'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
					//if(strpos($item['price'], '0') === 0) $item['price'] = 'Auf Anfrage';
					//$pdf->MultiCell(30, 0, $item['price'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 1);
					++$i;
					++$countItems;
				}
			}
			$pdf->ln(4);
			if($categories[$child]['footer']) {
				$pdf->MultiCell(175, 0, $categories[$child]['footer'], 0, 'L', false, 1, 18);
				$pdf->ln(4);
			}
			if(isset($optionSets[$child])) {
				$columnWidth = 112 / $countItems;
				$pdf->setCellPaddings(1, 0, 1, 0);
				foreach($optionSets[$child] as $set) {
					if($pdf->GetY() > 200) $pdf->AddPage();
					optionsHeader($pdf, $items, $options, $set, $child, $countItems, $columnWidth);
					$i = 1;
					foreach($items as $item) {
						if(isset($options[$item['catid']][$item['id']]) && ($item['catid'] == $child)) {
							$yOptionStart = $pdf->GetY();
							$pageOptionStart = $pdf->getPage();
							foreach($options[$item['catid']][$item['id']] as $id => $option) {
								$x = 0;
								if(array_search($option['optsetid'], $set['ids'])) {
									//$pdf->SetFont('freesans', '', 8);
									//if($columnWidth > 12) $pdf->SetFont('freesans', '', 9);
									//else $pdf->setCellPaddings(0, 0, 0, 0);
									if($columnWidth < 12) $pdf->setCellPaddings(0, 0, 0, 0);
									$option['price'] = floor((int) $option['price']);
									if($option['price'] == -1) $option['price'] = '-';
									elseif($option['price'] == -2) $option['price'] = 'auf Anfrage';
									elseif($option['price'] == 0) $option['price'] = 'STD';
									if($i == 1) {
										if($pdf->GetY() > 250) {
											$pdf->AddPage();
											optionsHeader($pdf, $items, $options, $set, $child, $countItems, $columnWidth);
											$yOptionStartNew = $pdf->GetY();
											$pageOptionStartNew = $pdf->getPage();
										}
										$pdf->SetX(20);
										$pdf->SetFont('freesans', '', 8);
										$pdf->MultiCell(15, 7, $option['sku'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'C', false, 0, '', '', true, 0, false, true, 8, 'M');
										$pdf->SetFont('freesans', '', 7);
										$pdf->MultiCell(48, 7, $option['title'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'C', false, 0, '', '', true, 0, false, true, 8, 'M');
										$pdf->SetFont('freesans', '', 8);
										$pdf->MultiCell($columnWidth, 7, $option['price'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'C', false, 1, '', '', true, 0, false, true, 8, 'M');
										$pdf->SetFont('freesans', '', 7);
									} else {
										if($pdf->GetY() > 250) {
											$pdf->AddPage();
											$pdf->SetY($yOptionStartNew);
											$pdf->SetPage($pageOptionStartNew);
										}
										$pdf->SetX(83+($i*$columnWidth)-$columnWidth);
										$pdf->SetFont('freesans', '', 8);
										$pdf->MultiCell($columnWidth, 7, $option['price'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'C', false, 1, '', '', true, 0, false, true, 8, 'M');
										$pdf->SetFont('freesans', '', 7);
									}
								}
							}
							if($i < $countItems) {
								$pdf->SetY($yOptionStart);
								$pdf->SetPage($pageOptionStart);
							}
							++$i;
						}
					}
					$pdf->ln(4);
				}
			}
		}
	}
}
							/*foreach($options[$item['catid']][$item['id']] as $id => $option) {
								$x = 0;
								if(array_search($option['optsetid'], $set['ids'])) {
									/*if($pdf->GetY() > 269.5) {
										//if($i < $countItems) {
											$pdf->AddPage();
											$pdf->SetY(30);
											//optionsHeader($pdf, $items, $options, $set, $child, $countItems, $columnWidth);
										//}
										$y = 30;
									}*//*
									$pdf->SetFont('freesans', '', 8);
									$x = $x+75+($i*8);
									if($columnWidth > 12) $pdf->SetFont('freesans', '', 9);
									else $pdf->setCellPaddings(0, 0, 0, 0);
									if($option['price'] == -1) $option['price'] = '-';
									elseif($option['price'] == 0) $option['price'] = 'STD';
									else $option['price'] = floor($option['price']);
									$pdf->MultiCell($columnWidth, 7, $x, array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'C', false, 0, $x, '', true, 0, false, true, 8, 'M');
									//$x = $x+8;
								}
								$pdf->ln();
							}*/
							/*$yOptionEnd = $pdf->GetY();
							$pageOptionEnd = $pdf->getPage();
							if($i < $countItems) {
								$pdf->setPage($pageOptionStart);
								$x = $x + $columnWidth;
								$y = $yOptionStart;
							}*/
					/*if($pdf->GetY() > 200) {
						$pdf->AddPage();
						$y = 20;
					}*/
					//$pdf->SetY($yOptionEnd);
					//$pdf->setPage($pageOptionEnd);
				/*if(isset($pageOptionEnd)) {
					$pdf->setPage($pageOptionEnd);
					$y = $yOptionEnd;
				}*/
			//if($y>220) $pdf->AddPage();

function itemsHeader($pdf, $rows) {
	//ITEMS HEADER
	$pdf->SetFont('freesansb', 'B', 8);
	$pdf->setCellPaddings(2, 1, 0, 1);
	$p = 1;
	$c = count($rows);
	foreach($rows as $row) {
		if($p==1) {
			$pdf->MultiCell($row['width'], 0, $row['label'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0, 20);
		} elseif(($p>1) && ($p<$c)) {
			$pdf->MultiCell($row['width'], 0, $row['label'], array('LTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 0);
		} elseif($p==$c) {
			$pdf->MultiCell($row['width'], 0, $row['label'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'L', false, 1);
		}
		++$p;
	}
}

function optionsHeader($pdf, $items, $options, $set, $child, $countItems, $columnWidth) {
	$pdf->ln(10);
	$pdf->SetFont('freesans', 'B', 12);
	$pdf->MultiCell(150, 0, $set['title'], false, 'L', false, 1, 20);
	$x = 83;
	$pdf->SetFont('freesans', 'B', 8);
	if($countItems > 5) {
		$y = $pdf->GetY() + $columnWidth + 18;
		foreach($items as $item) {
			if(isset($options[$item['catid']][$item['id']]) && ($item['catid'] == $child)) {
				$pdf->SetXY($x, $y);
				$pdf->StartTransform();
				$pdf->Rotate(90);
				$pdf->MultiCell(20, $columnWidth, $item['sku'], 1, 'C', false, 0, $x, $y, true, 0, false, true, $columnWidth, 'M');
				$pdf->StopTransform();
				$x += $columnWidth;
			}
		}
		$pdf->SetY($y-$columnWidth);
	} else {
		$y = $pdf->GetY() + 4;
		foreach($items as $item) {
			if(isset($options[$item['catid']][$item['id']]) && ($item['catid'] == $child)) {
				$pdf->MultiCell($columnWidth, 6, $item['sku'], array('LRTB' => array('width' => 0.1, 'color' => array(0, 0, 0))), 'C', false, 0, $x, $y, true, 0, false, true, 6, 'M');
				$x += $columnWidth;
			}
		}
	}
	$pdf->ln();
}
