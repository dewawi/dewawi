<?php
$this->title = 'Credit Note Pdf';
$this->headTitle($this->title);

//Config
$client = $this->client;

//Credit Note
$id = $this->reminder['id'];
$reminderid = $this->reminder['reminderid'];
$contactid = $this->reminder['contactid'];
$reminderdate = $this->reminder['reminderdate'];
if($reminderdate != '0000-00-00') $reminderdate = implode('.', array_reverse(explode('-', $reminderdate)));
else $reminderdate = 0;
$orderdate = $this->reminder['orderdate'];
if($orderdate != '0000-00-00') $orderdate = implode('.', array_reverse(explode('-', $orderdate)));
else $orderdate = 0;
$deliverydate = $this->reminder['deliverydate'];
if($deliverydate != '0000-00-00') $deliverydate = implode('.', array_reverse(explode('-', $deliverydate)));
else $deliverydate = 0;
$vatin = $this->reminder['vatin'];
$header = $this->reminder['header'];
$footer = $this->reminder['footer'];
$created = $this->reminder['created'];

//BillingAddress
$billingName1 = $this->reminder['billingname1'];
$billingName2 = $this->reminder['billingname2'];
$billingDepartment = $this->reminder['billingdepartment'];
$billingStreet = $this->reminder['billingstreet'];
$billingPostcode = $this->reminder['billingpostcode'];
$billingCity = $this->reminder['billingcity'];
$billingCountry = $this->translate($this->reminder['billingcountry']);

//ShippingAddress
$shippingName1 = $this->reminder['shippingname1'];
$shippingName2 = $this->reminder['shippingname2'];
$shippingDepartment = $this->reminder['shippingdepartment'];
$shippingStreet = $this->reminder['shippingstreet'];
$shippingPostcode = $this->reminder['shippingpostcode'];
$shippingCity = $this->reminder['shippingcity'];
$shippingCountry = $this->translate($this->reminder['shippingcountry']);
$shippingPhone = $this->reminder['shippingphone'];
$shippingAddress = false;
if($shippingName1 || $shippingStreet) $shippingAddress = true;

//Positions
$positions = $this->positions;

//TCPDF
require_once(BASE_PATH.'/library/Tcpdf/config/tcpdf_config.php');
require_once(BASE_PATH.'/library/Tcpdf/tcpdf.php');

// create new PDF document
$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

// set document information
$pdf->SetCreator(PDF_CREATOR);
$pdf->SetAuthor(PDF_AUTHOR);
if($reminderid) $pdf->SetTitle($this->translate('REMINDER').' '.$reminderid.' '.$billingName1);
else $pdf->SetTitle($this->translate('REMINDER').' '.$this->translate('DOCUMENTS_SAMPLE').' '.$billingName1);
$pdf->SetSubject($this->translate('REMINDER'));

// remove default header/footer
$pdf->setPrintHeader(false);
$pdf->setPrintFooter(false);

// set default header data
$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

// set header and footer fonts
$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

// set default monospaced font
$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

//set display mode
$pdf->SetDisplayMode('real', 'OneColumn');

//set margins
$pdf->SetMargins(15, 30, 15);

//set auto page breaks
$pdf->SetAutoPageBreak(true, 30);

//set image scale factor
$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

// add a page
$pdf->AddPage();
$pageStart = $pdf->getPage();

//Website
if(isset($this->template) && $this->template['website']) {
	$website = $this->template['website'];
} else {
	$website = $client['website'];
}

//Logo
if(isset($this->template) && $this->template['logo'] && file_exists(BASE_PATH.'/files/images/'.$this->template['logo'])) {
	$logo = BASE_PATH.'/files/images/'.$this->template['logo'];
    $pdf->Image($logo, 145, 10, 0, 0, '', $website);
}

//IMPORTANT INFORMATIONS
$pdf->SetY(40);
$pdf->setCellPaddings(0, 0, 0, 0);
$pdf->SetFont('freesans', '', 9);
$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_REMINDER_ID'), 0, 'L', false, 0, 130);
if($reminderid) $pdf->MultiCell(40, 5, $reminderid, 0, 'L', false, 1, 160);
else $pdf->MultiCell(40, 5, ' - - - - - ', 0, 'L', false, 1, 160);
$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_REMINDER_DATE'), 0, 'L', false, 0, 130);
if($reminderdate) $pdf->MultiCell(28, 5, $reminderdate, 0, 'L', false, 1, 160);
else $pdf->MultiCell(28, 5, ' - - - - - ', 0, 'L', false, 1, 160);
$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_CUSTOMER_ID'), 0, 'L', false, 0, 130);
$pdf->MultiCell(28, 5, $contactid, 0, 'L', false, 1, 160);
if($vatin) {
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_VATIN'), 0, 'L', false, 0, 130);
	$pdf->MultiCell(84, 5, $vatin, 0, 'L', false, 1, 160);
}
if($orderdate) {
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_ORDER_DATE'), 0, 'L', false, 0, 130);
	$pdf->MultiCell(84, 5, $orderdate, 0, 'L', false, 1, 160);
}
if($deliverydate) {
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_DELIVERY_DATE'), 0, 'L', false, 0, 130);
	$pdf->MultiCell(84, 5, $deliverydate, 0, 'L', false, 1, 160);
}
$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_SALES_PERSON'), 0, 'L', false, 0, 130);
$pdf->MultiCell(84, 5, $this->reminder['contactperson'], 0, 'L', false, 1, 160);
$pdf->ln(8);
$y = $pdf->GetY();

//Shipping Address
if($shippingAddress) {
	$pdf->SetFont('freesansb', 'B', 10);
	$pdf->MultiCell(70, 0, $this->translate('DOCUMENTS_SHIPPING_ADDRESS'), 0, 'L', false, 1, 130);
	$pdf->SetFont('freesans', '', 10);
	$pdf->MultiCell(70, 0, $shippingName1, 0, 'L', false, 1, 130);
	if($shippingName2) $pdf->MultiCell(70, 0, $shippingName2, 0, 'L', false, 1, 130);
	if($shippingDepartment) $pdf->MultiCell(70, 0, $shippingDepartment, 0, 'L', false, 1, 130);
	$pdf->MultiCell(70, 0, $shippingStreet, 0, 'L', false, 1, 130);
	$shippingPostcodeCity = '';
	if($shippingPostcode) $shippingPostcodeCity .= $shippingPostcode.' ';
	if($shippingCity) $shippingPostcodeCity .= $shippingCity;
	if($shippingPostcodeCity) $pdf->MultiCell(70, 0, $shippingPostcodeCity, 0, 'L', false, 1, 130);
	if($shippingCountry) $pdf->MultiCell(70, 0, $shippingCountry, 0, 'L', false, 1, 130);
	if($shippingPhone) $pdf->MultiCell(70, 0, $this->translate('DOCUMENTS_PHONE').' '.$shippingPhone, 0, 'L', false, 1, 130);
	$pdf->ln(10);
	$y = $pdf->GetY();
}

$pdf->setCellPaddings(0, 0, 0, 0);

$x = $pdf->GetX()+5;
$pdf->SetFont('freesansb', 'B', 15);
$pdf->MultiCell(0, 0, mb_strtoupper($this->translate('REMINDER'), 'UTF-8'), 0, 'L', false, 1, $x, 20);
$pdf->ln(22);

//LETTERHEAD
$pdf->SetFont('freesans', '', 7);
if(isset($this->template) && isset($this->template['company']) && $this->template['company']) {
	$address = $this->template['company'];
} else {
	$address = $client['company'];
    if($client['address']) $address .= ', '.$client['address'];
    if($client['postcode']) $address .= ', '.$client['postcode'];
    if($client['city']) $address .= ' '.$client['city'];
}
$pdf->MultiCell(70, 4, $address, 'B', 'L', false, 1, $x);
$pdf->ln(4);
$pdf->SetFont('freesans', '', 10);

//Contact adress
$pdf->MultiCell(70, 0, $billingName1, 0, 'L', false, 1, $x);
if($billingName2) $pdf->MultiCell(70, 0, $billingName2, 0, 'L', false, 1, $x);
if($billingStreet) $pdf->MultiCell(70, 0, $billingStreet, 0, 'L', false, 1, $x);
if($billingDepartment) $pdf->MultiCell(70, 0, $billingDepartment, 0, 'L', false, 1, $x);
$pdf->MultiCell(70, 0, $billingPostcode.' '.$billingCity, 0, 'L', false, 1, $x);
$pdf->MultiCell(70, 0, $billingCountry, 0, 'L', false, 1, $x);
$pdf->ln(20);
if($y > $pdf->GetY()) $pdf->SetY($y);

//HEADER
if($header) {
	$pdf->SetFont('freesans', '', 9);
	$pdf->MultiCell(175, 0, $header, 0, 'L', false, 1, $x, '', $reseth=true, $stretch=0, $ishtml=true);
	$pdf->ln(4);
}

if(count($positions)) {
	$pdf->setCellPaddings(1, 0, 0, 0);

	$pdf->SetFont('freesansb', 'B', 8);

	//POSITIONS HEADER
	$pdf->Cell(10, 5, $this->translate('DOCUMENTS_POSITION'), 'LTB');
	$pdf->setCellPaddings(0, 0, 0, 0);
	$pdf->Cell(98, 5, $this->translate('DOCUMENTS_DESCRIPTION'), 'TB');
	$pdf->Cell(10, 5, $this->translate('DOCUMENTS_QUANTITY'), 'TB');
	$pdf->Cell(12, 5, $this->translate('DOCUMENTS_UOM'), 'TB', 0, 'C');
	$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_SINGLE'), 'TB', 0, 'C');
	$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_TOTAL'), 'TBR', 0, 'C');
	$pdf->ln(5);

	//POSITIONS
	$y = 0;
	$i = 1;
	foreach($positions as $position) {
		$x = $pdf->getX();
		$pdf->setCellPaddings(0, 2, 0, 0);
		$pdf->SetFont('freesans', '', 9);
		$pdf->MultiCell(10, 0, $i, 0, 'C', false, 0, $x, '', true, 0);
		$pdf->MultiCell(10, 0, $position->quantity, 0, 'C', false, 0, $x+108, '', true, 0);
		if($position->uom) $pdf->MultiCell(12, 0, $position->uom, 0, 'C', false, 0, $x+118, '', true, 0);
		$pdf->MultiCell(25, 0, $position->price, 0, 'C', false, 0, $x+130, '', true, 0);
		$pdf->MultiCell(25, 0, $position->total, 0, 'C', false, 0, $x+155, '', true, 0);
		$pdf->MultiCell(108, 0, $position->sku, 0, 'L', false, 2, $x+10, '', true, 0);
		$pdf->setCellPaddings(0, 0, 0, 0);
		if($position->title) {
			$pdf->MultiCell(108, 0, $position->title, 0, 'L', false, 2, $x+10, '', true, 0);
		}
		if($position->image && file_exists(BASE_PATH.'/files/images/'.$position->image)) {
			$startPage = $pdf->getPage();
			$y = $pdf->getY();
			$pdf->Image(BASE_PATH.'/files/images/'.$position->image, $x+10, '', 30, 0, '', '', 'N');
			$endPage = $pdf->getPage();
			if($startPage == $endPage) {
				$imageHeight = $pdf->getY() - $y;
			} else {
				$imageHeight = $pdf->getY() + $pdf->getPageHeight() - $y - 60;
				$pdf->setPage($startPage);
			}
			if($position->description) {
				$pdf->MultiCell(65, $imageHeight, $position->description, 0, 'L', false, 1, $x+43, $y, true, 0);
			}
		} elseif($position->description) {
			$pdf->MultiCell(98, 0, $position->description, 0, 'L', false, 1, $x+10, '', true, 0);
		}
		$pdf->MultiCell(0, 5, ' ', 'B', 'L', false, 1, '', $pdf->getY()-2, true, 0);
		++$i;
	}
	$pdf->ln(4);

	$pdf->SetFont('freesans', '', 9);

	//FOOTER
	if($footer) $pdf->MultiCell(105, 0, $footer, 0, 'L', false, 0, '', '', $reseth=true, $stretch=0, $ishtml=true);

	$pdf->setCellPaddings(3, 1, 3, 1);

	$pdf->SetFont('freesansb', 'B', 10);

	//TOTAL BOX
	$x = $pdf->getX();
	$pdf->MultiCell(45, 0, $this->translate('DOCUMENTS_SUBTOTAL'), 'LT', 'L', false, 0 ,$x);
	$pdf->MultiCell(30, 0, $this->reminder['subtotal'], 'TR', 'R', false, 1);
	$pdf->setCellPaddings(3, 0, 3, 1);
	$pdf->MultiCell(45, 0, $this->translate('DOCUMENTS_TAXES').' ('.$this->reminder['taxrate'].'%)', 'L', 'L', false, 0 ,$x);
	$pdf->MultiCell(30, 0, $this->reminder['taxes'], 'R', 'R', false, 1);
	$pdf->setCellPaddings(3, 1, 3, 1);
	$pdf->MultiCell(45, 0, $this->translate('DOCUMENTS_TOTAL'), 'LBT', 'L', false, 0 ,$x);
	$pdf->MultiCell(30, 0, $this->reminder['total'], 'RBT', 'R', false, 1);
}

$i = 1;
$lastPage = $pdf->GetPage();
while($i <= $lastPage) {
	$pdf->setPage($i);

	if(!$reminderid) {
		sample($pdf, strtoupper($this->translate('DOCUMENTS_SAMPLE')));
	}

	if($this->reminder['state'] == 7) {
		cancelled($pdf, strtoupper($this->translate('DOCUMENTS_CANCELLED')));
	}
	if($i > 1) {
        if(isset($logo)) {
		    $pdf->Image($logo, 155, 10, 40, 0, '', $website);
        }

		$y = $pdf->GetY();
		$pdf->SetY(20);

		//New page info box
		$pdf->setCellPaddings(1, 1, 0, 0);
		$pdf->SetFont('freesans', '', 8);
		$pdf->Write(0, $this->translate('DOCUMENTS_REMINDER_ID').' ');
		$pdf->SetFont('freesansb', 'B', 8);
		if($reminderid) $pdf->Write(0, $reminderid.'     ');
		else $pdf->Write(0, ' - - - - -     ');
		$pdf->SetFont('freesans', '', 8);
		$pdf->Write(0, $this->translate('DOCUMENTS_REMINDER_DATE').' ');
		$pdf->SetFont('freesansb', 'B', 8);
		if($reminderdate) $pdf->Write(0, $reminderdate.'     ');
		else $pdf->Write(0, ' - - - - -     ');
		$pdf->SetFont('freesans', '', 8);
		$pdf->Write(0, $this->translate('DOCUMENTS_CUSTOMER_ID').' ');
		$pdf->SetFont('freesansb', 'B', 8);
		$pdf->Write(0, $contactid);
		$pdf->ln();

		$pdf->setCellPaddings(1, 0, 0, 0);

		$pdf->SetFont('freesansb', 'B', 8);

		//POSITIONS HEADER
		$pdf->Cell(10, 5, $this->translate('DOCUMENTS_POSITION'), 'LTB');
		$pdf->setCellPaddings(0, 0, 0, 0);
		$pdf->Cell(98, 5, $this->translate('DOCUMENTS_DESCRIPTION'), 'TB');
		$pdf->Cell(10, 5, $this->translate('DOCUMENTS_QUANTITY'), 'TB');
		$pdf->Cell(12, 5, $this->translate('DOCUMENTS_UOM'), 'TB', 0, 'C');
		$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_SINGLE'), 'TB', 0, 'C');
		$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_TOTAL'), 'TBR', 0, 'C');
		$pdf->ln(5);
	}

	$pdf->setCellPaddings(0, 2, 0, 2);
	$pdf->SetAutoPageBreak(false);
	$pdf->SetFont('freesans', '', 7);

	//Footer
	$x = 12;
	$pdf->SetY(270);
	foreach($this->footers as $footer) {
		$width = $footer->width ? $footer->width : 40;
		$pdf->MultiCell($width, 3, $footer->text, 0, 'L', false, 0, $x);
		$x += $width;
	}

	// Page number
	$pdf->SetY(284);
	$pdf->SetFont('helvetica', 'I', 8);
	$pdf->Cell(0, 10, $this->translate('DOCUMENTS_PAGE').' '.$pdf->getAliasNumPage().'/'.$pdf->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
	$pdf->SetFont('freesans', '', 8);

	$pdf->SetAutoPageBreak(true, 30);

	$pdf->SetY($y);
	++$i;
}

//Close and output PDF document
if($this->action == 'download') {
	if($reminderid) $pdf->Output($reminderid.' '.$this->translate('REMINDER').' '.$billingName1.'.pdf', 'D');
	else $pdf->Output($this->translate('DOCUMENTS_SAMPLE').' '.$this->translate('REMINDER').' '.$billingName1.'.pdf', 'D');
} else {
    $path = BASE_PATH.'/files/contacts/';
    $dir1 = substr($contactid, 0, 1).'/';
    if(strlen($contactid) > 1) $dir2 = substr($contactid, 1, 1).'/';
    else $dir2 = '0/';
	if($reminderid) {
		$pdf->Output($path.$dir1.$dir2.$contactid.'/'.$this->translate('REMINDER').'-'.$reminderid.'.pdf', 'F');
		$html = '<iframe src="'.$this->baseUrl().'/files/contacts/'.$dir1.$dir2.$contactid.'/'.$this->translate('REMINDER').'-'.$reminderid.'.pdf?'.time().'" width="900px" height="500px">';
	} else {
		$pdf->Output(BASE_PATH.'/cache/reminder/'.$id.'.pdf', 'F');
		$html = '<iframe src="'.$this->baseUrl().'/cache/reminder/'.$id.'.pdf?'.time().'" width="900px" height="500px">';
	}
	echo $html;
}

function sample($pdf, $txt) {
	// set alpha to semi-transparency
	$pdf->SetAlpha(0.5);
	$pdf->SetTextColor(225, 225, 225);
	$y = $pdf->GetY();
	$width = $pdf->GetX();
	$pdf->setY(140);
	$pdf->SetFont('helvetica', 'B', 75);
	$pdf->Write(0, $txt, '', false, 'C');
	//$pdf->Cell(0, 200, $txt, 0, false, 'C', 0, '', 0, false, 'T', 'M');
	$pdf->SetY($y);
	$pdf->setX($width);
	$pdf->SetTextColor(0, 0, 0);
	// restore full opacity
	$pdf->SetAlpha(1);
}

function cancelled($pdf, $txt) {
	// set alpha to semi-transparency
	$pdf->SetAlpha(0.5);
	$pdf->SetTextColor(225, 225, 225);
	$y = $pdf->GetY();
	$width = $pdf->GetX();
	$pdf->setY(140);
	$pdf->SetFont('helvetica', 'B', 75);
	$pdf->Write(0, $txt, '', false, 'C');
	$pdf->SetY($y);
	$pdf->setX($width);
	$pdf->SetTextColor(0, 0, 0);
	// restore full opacity
	$pdf->SetAlpha(1);
}
