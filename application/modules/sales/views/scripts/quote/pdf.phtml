<?php
if(isset($this->template) && $this->template['filename'] && file_exists(BASE_PATH.'/templates/modules/sales/quote/'.$this->template['filename'].'.phtml')) {
	include BASE_PATH.'/templates/modules/sales/quote/'.$this->template['filename'].'.phtml';
} else {
	$this->title = 'Quote Pdf';
	$this->headTitle($this->title);

	//Config
	$client = $this->client;

	//Quote
	$id = $this->quote['id'];
	$quoteid = $this->quote['quoteid'];
	$contactid = $this->quote['contactid'];
	$quotedate = $this->quote['quotedate'];
	if($quotedate) $quotedate = implode('.', array_reverse(explode('-', $quotedate)));
	$deliverydate = $this->quote['deliverydate'];
	if($deliverydate) $deliverydate = implode('.', array_reverse(explode('-', $deliverydate)));
	$vatin = $this->quote['vatin'];
	$header = $this->quote['header'];
	$footer = $this->quote['footer'];
	$created = $this->quote['created'];
	$filename = $this->quote['filename'];

	//BillingAddress
	$billingName1 = $this->quote['billingname1'];
	$billingName2 = $this->quote['billingname2'];
	$billingDepartment = $this->quote['billingdepartment'];
	$billingStreet = $this->quote['billingstreet'];
	$billingPostcode = $this->quote['billingpostcode'];
	$billingCity = $this->quote['billingcity'];
	$billingCountry = $this->translate($this->quote['billingcountry']);

	//ShippingAddress
	$shippingName1 = $this->quote['shippingname1'];
	$shippingName2 = $this->quote['shippingname2'];
	$shippingDepartment = $this->quote['shippingdepartment'];
	$shippingStreet = $this->quote['shippingstreet'];
	$shippingPostcode = $this->quote['shippingpostcode'];
	$shippingCity = $this->quote['shippingcity'];
	$shippingCountry = $this->quote['shippingcountry'];
	if($shippingCountry) $shippingCountry = $this->translate($shippingCountry);
	$shippingPhone = $this->quote['shippingphone'];
	$shippingAddress = false;
	if($shippingName1 || $shippingStreet) $shippingAddress = true;

	//Positions
	$positions = $this->positions;

	//Options
	$options = $this->options;
	$optionSets = $this->optionSets;

	//TCPDF
	require_once(BASE_PATH.'/library/Tcpdf/config/tcpdf_config.php');
	require_once(BASE_PATH.'/library/Tcpdf/tcpdf.php');

	// create new PDF document
	$pdf = new TCPDF(PDF_PAGE_ORIENTATION, PDF_UNIT, PDF_PAGE_FORMAT, true, 'UTF-8', false);

	// set document information
	$pdf->SetCreator(PDF_CREATOR);
	$pdf->SetAuthor(PDF_AUTHOR);
	if($quoteid) $pdf->SetTitle($this->translate('QUOTE').' '.$quoteid.' '.$billingName1);
	else $pdf->SetTitle($this->translate('QUOTE').' '.$this->translate('DOCUMENTS_SAMPLE').' '.$billingName1);
	$pdf->SetSubject($this->translate('QUOTE'));

	// remove default header/footer
	$pdf->setPrintHeader(false);
	$pdf->setPrintFooter(false);

	// set default header data
	$pdf->SetHeaderData(PDF_HEADER_LOGO, PDF_HEADER_LOGO_WIDTH, PDF_HEADER_TITLE, PDF_HEADER_STRING);

	// set header and footer fonts
	$pdf->setHeaderFont(Array(PDF_FONT_NAME_MAIN, '', PDF_FONT_SIZE_MAIN));
	$pdf->setFooterFont(Array(PDF_FONT_NAME_DATA, '', PDF_FONT_SIZE_DATA));

	// set default monospaced font
	$pdf->SetDefaultMonospacedFont(PDF_FONT_MONOSPACED);

	//set display mode
	$pdf->SetDisplayMode('real', 'OneColumn');

	//set margins
	$pdf->SetMargins(15, 30, 15);

	//set auto page breaks
	$pdf->SetAutoPageBreak(true, 30);

	//set image scale factor
	$pdf->setImageScale(PDF_IMAGE_SCALE_RATIO);

	// add a page
	$pdf->AddPage();
	$pageStart = $pdf->getPage();

	//Website
	if(isset($this->template) && $this->template['website']) {
		$website = $this->template['website'];
	} else {
		$website = $client['website'];
	}

	//Logo
	if(isset($this->template) && $this->template['logo'] && file_exists(BASE_PATH.'/files/images/'.$this->template['logo'])) {
		$logo = BASE_PATH.'/files/images/'.$this->template['logo'];
		$pdf->Image($logo, 145, 10, 50, 0, '', $website);
	}

	//IMPORTANT INFORMATIONS
	$pdf->SetY(40);
	$pdf->setCellPaddings(0, 0, 0, 0);
	$pdf->SetFont('freesans', '', 9);
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_QUOTE_ID'), 0, 'L', false, 0, 130);
	if($quoteid) $pdf->MultiCell(40, 5, $quoteid, 0, 'L', false, 1, 160);
	else $pdf->MultiCell(40, 5, ' - - - - - ', 0, 'L', false, 1, 160);
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_QUOTE_DATE'), 0, 'L', false, 0, 130);
	if($quotedate) $pdf->MultiCell(28, 5, $quotedate, 0, 'L', false, 1, 160);
	else $pdf->MultiCell(28, 5, ' - - - - - ', 0, 'L', false, 1, 160);
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_CUSTOMER_ID'), 0, 'L', false, 0, 130);
	$pdf->MultiCell(28, 5, $contactid, 0, 'L', false, 1, 160);
	if($vatin) {
		$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_VATIN'), 0, 'L', false, 0, 130);
		$pdf->MultiCell(84, 5, $vatin, 0, 'L', false, 1, 160);
	}
	if($deliverydate) {
		$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_DELIVERY_DATE'), 0, 'L', false, 0, 130);
		$pdf->MultiCell(84, 5, $deliverydate, 0, 'L', false, 1, 160);
	}
	$pdf->MultiCell(30, 5, $this->translate('DOCUMENTS_SALES_PERSON'), 0, 'L', false, 0, 130);
	$pdf->MultiCell(84, 5, $this->quote['contactperson'], 0, 'L', false, 1, 160);
	$pdf->ln(8);
	$y = $pdf->GetY();

	//Shipping Address
	if($shippingAddress) {
		$pdf->SetFont('freesansb', 'B', 10);
		$pdf->MultiCell(70, 0, $this->translate('DOCUMENTS_SHIPPING_ADDRESS'), 0, 'L', false, 1, 130);
		$pdf->SetFont('freesans', '', 10);
		$pdf->MultiCell(70, 0, $shippingName1, 0, 'L', false, 1, 130);
		if($shippingName2) $pdf->MultiCell(70, 0, $shippingName2, 0, 'L', false, 1, 130);
		if($shippingDepartment) $pdf->MultiCell(70, 0, $shippingDepartment, 0, 'L', false, 1, 130);
		$pdf->MultiCell(70, 0, $shippingStreet, 0, 'L', false, 1, 130);
		$shippingPostcodeCity = '';
		if($shippingPostcode) $shippingPostcodeCity .= $shippingPostcode.' ';
		if($shippingCity) $shippingPostcodeCity .= $shippingCity;
		if($shippingPostcodeCity) $pdf->MultiCell(70, 0, $shippingPostcodeCity, 0, 'L', false, 1, 130);
		if($shippingCountry) $pdf->MultiCell(70, 0, $shippingCountry, 0, 'L', false, 1, 130);
		if($shippingPhone) $pdf->MultiCell(70, 0, $this->translate('DOCUMENTS_PHONE').' '.$shippingPhone, 0, 'L', false, 1, 130);
		$pdf->ln(10);
		$y = $pdf->GetY();
	}

	$pdf->setCellPaddings(0, 0, 0, 0);

	$x = $pdf->GetX()+5;
	$pdf->SetFont('freesansb', 'B', 15);
	$pdf->MultiCell(0, 0, mb_strtoupper($this->translate('QUOTE'), 'UTF-8'), 0, 'L', false, 1, $x, 20);
	$pdf->ln(22);

	//LETTERHEAD
	$pdf->SetFont('freesans', '', 7);
	if(isset($this->template) && isset($this->template['company']) && $this->template['company']) {
		$address = $this->template['company'];
	} else {
		$address = $client['company'];
		if($client['address']) $address .= ', '.$client['address'];
		if($client['postcode']) $address .= ', '.$client['postcode'];
		if($client['city']) $address .= ' '.$client['city'];
	}
	$pdf->MultiCell(70, 4, $address, 'B', 'L', false, 1, $x);
	$pdf->ln(4);
	$pdf->SetFont('freesans', '', 10);

	//Contact adress
	if($contactid) {
		$pdf->MultiCell(70, 0, $billingName1, 0, 'L', false, 1, $x);
		if($billingName2) $pdf->MultiCell(70, 0, $billingName2, 0, 'L', false, 1, $x);
		if($billingDepartment) $pdf->MultiCell(70, 0, $billingDepartment, 0, 'L', false, 1, $x);
		if($billingStreet) $pdf->MultiCell(70, 0, $billingStreet, 0, 'L', false, 1, $x);
		$pdf->MultiCell(70, 0, $billingPostcode.' '.$billingCity, 0, 'L', false, 1, $x);
		$pdf->MultiCell(70, 0, $billingCountry, 0, 'L', false, 1, $x);
		$pdf->ln(20);
		if($y > $pdf->GetY()) $pdf->SetY($y);
	}

	//HEADER
	if($header) {
		$pdf->SetFont('freesans', '', 9);
		$pdf->MultiCell(175, 0, $header, 0, 'L', false, 1, $x, '', $reseth=true, $stretch=0, $ishtml=true);
		$pdf->ln(4);
	}

	if(count($positions)) {
		$pdf->setCellPaddings(1, 0, 0, 0);

		$pdf->SetFont('freesansb', 'B', 8);

		//POSITIONS HEADER
		$pdf->Cell(10, 5, $this->translate('DOCUMENTS_POSITION'), 'LTB');
		$pdf->setCellPaddings(0, 0, 0, 0);
		$pdf->Cell(98, 5, $this->translate('DOCUMENTS_DESCRIPTION'), 'TB');
		$pdf->Cell(10, 5, $this->translate('DOCUMENTS_QUANTITY'), 'TB');
		$pdf->Cell(12, 5, $this->translate('DOCUMENTS_UOM'), 'TB', 0, 'C');
		$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_SINGLE'), 'TB', 0, 'C');
		$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_TOTAL'), 'TBR', 0, 'C');
		$pdf->ln(5);

		//POSITIONS
		$y = 0;
		$i = 1;
		$positionsArray = array();
		$childsArray = array();
		foreach($positions as $position) {
			$positionsArray[$position->id] = $position;
			$childsArray[$position->masterid][] = $position->id;
		}
		foreach($positions as $position) {
			if($position->masterid == 0) {
				$x = $pdf->getX();
				$pdf->setCellPaddings(0, 2, 0, 0);
				$pdf->SetFont('freesans', '', 9);
				$pdf->MultiCell(10, 0, $i, 0, 'C', false, 0, $x, '', true, 0);
				$pdf->MultiCell(10, 0, $position->quantity, 0, 'C', false, 0, $x+108, '', true, 0);
				if($position->uom) $pdf->MultiCell(12, 0, $position->uom, 0, 'C', false, 0, $x+118, '', true, 0);
				$pdf->MultiCell(25, 0, $position->price, 0, 'C', false, 0, $x+130, '', true, 0);
				$pdf->MultiCell(25, 0, $position->total, 0, 'C', false, 0, $x+155, '', true, 0);
				$pdf->MultiCell(108, 0, $position->sku, 0, 'L', false, 2, $x+10, '', true, 0);
				$pdf->setCellPaddings(0, 0, 0, 0);
				if($position->title) {
					$pdf->MultiCell(108, 0, $position->title, 0, 'L', false, 2, $x+10, '', true, 0);
				}
				if($position->image && file_exists(BASE_PATH.'/files/images/'.$position->image)) {
					$startPage = $pdf->getPage();
					$y = $pdf->getY();
					$pdf->Image(BASE_PATH.'/files/images/'.$position->image, $x+10, '', 30, 0, '', '', 'N');
					$endPage = $pdf->getPage();
					if($startPage == $endPage) {
						$imageHeight = $pdf->getY() - $y;
					} else {
						$imageHeight = $pdf->getY() + $pdf->getPageHeight() - $y - 60;
						$pdf->setPage($startPage);
					}
					if($position->description) {
						$pdf->MultiCell(65, $imageHeight, $position->description, 0, 'L', false, 1, $x+43, $y, true, 0);
					}
				} elseif($position->description) {
					$pdf->MultiCell(98, 0, $position->description, 0, 'L', false, 1, $x+10, '', true, 0);
				}
				$pdf->MultiCell(0, 5, ' ', 'B', 'L', false, 1, '', $pdf->getY()-2, true, 0);
				++$i;
				if(isset($childsArray[$position->id])) {
					foreach($childsArray[$position->id] as $child) {
						childPositions($positionsArray[$child], $pdf, $i);
						++$i;
					}
				}
			}
		}
		$pdf->ln(4);

		//TOTAL BOX
		$x = 120;
		$y = $pdf->getY();
		$pdf->SetFont('freesansb', 'B', 10);
		$pdf->setCellPaddings(3, 1, 3, 1);
		$pdf->MultiCell(45, 0, $this->translate('DOCUMENTS_SUBTOTAL'), 'LT', 'L', false, 0 ,$x);
		$pdf->MultiCell(30, 0, $this->quote['subtotal'], 'TR', 'R', false, 1);
		$pdf->setCellPaddings(3, 0, 3, 1);
		$pdf->MultiCell(45, 0, $this->translate('DOCUMENTS_TAXES').' ('.$this->quote['taxrate'].'%)', 'L', 'L', false, 0 ,$x);
		$pdf->MultiCell(30, 0, $this->quote['taxes'], 'R', 'R', false, 1);
		$pdf->setCellPaddings(3, 1, 3, 1);
		$pdf->MultiCell(45, 0, $this->translate('DOCUMENTS_TOTAL'), 'LBT', 'L', false, 0 ,$x);
		$pdf->MultiCell(30, 0, $this->quote['total'], 'RBT', 'R', false, 1);
		$page = $pdf->getPage();
		$pdf->setY($y);

		//OPTIONS
		if(true) {
			$y = 0;
			$list = array();
			$addPage = true;
			foreach($positions as $position) {
				$list[] = $position->sku;
				if(isset($options[$position->id]) && $addPage) {
					$pdf->AddPage();
					$pdf->SetFont('freesans', 'B', 9);
					$pdf->setCellPaddings(1, 2, 1, 2);
					$pdf->MultiCell(175, 0, "-------------------------------------------------------------------------------------------------------------------------------------------------------------------", 0, 'L', false, 1, '', '', true, 0);
					$pdf->MultiCell(175, 0, "Folgende Ausstattungen und Funktionen die nicht im Angebot enthalten sind können je nach Bedarf und Einsatzzweck der Maschine zusätzlich bestellt werden. Die Basismaschine in der Grundausstattung ist einsatzfähig und betriebsbereit.", 0, 'L', false, 1, '', '', true, 0);
					$pdf->MultiCell(175, 0, "-------------------------------------------------------------------------------------------------------------------------------------------------------------------", 0, 'L', false, 1, '', '', true, 0);
					$pdf->setCellPaddings(1, 1, 1, 1);
					$addPage = false;
				}
			}
			foreach($positions as $position) {
				if(isset($options[$position->id])) {
					$pdf->SetFont('freesans', 'B', 10);
					$pdf->MultiCell(175, 0, 'Optionale Ausstattung für '.$position->sku.' '.$position->title, 0, 'L', false, 1, '', '', true, 0);
					foreach($optionSets[$position->id] as $optionSet) {
						if($pdf->getY() > 250) $pdf->AddPage();
						$pdf->SetFont('freesans', 'B', 10);
						$pdf->MultiCell(145, 0, $optionSet->title, 0, 'L', false, 0, '', '', true, 0);
						$pdf->MultiCell(30, 0, "- optional -", 0, 'R', false, 1, '', '', true, 0);
						$pdf->SetFont('freesans', '', 9);
						foreach($options[$position->id][$optionSet->id] as $option) {
							if(array_search($option->sku, $list) == false) {
								$pdf->MultiCell(15, 0, $option->sku, 0, 'L', false, 0, '', '', true, 0);
								$pdf->MultiCell(130, 0, $option->title, 0, 'L', false, 0, '', '', true, 0);
								if($option->price == 0) $option->price = 'bereits enthalten';
								elseif($option->price == -1) $option->price = 'auf Anfrage';
								elseif($option->price == -2) $option->price = 'nicht Verfügbar';
								$pdf->MultiCell(30, 0, $option->price, 0, 'R', false, 1, 160, '', true, 0);
								if($option->description) $pdf->MultiCell(120, 0, $option->description, 0, 'L', false, 1, 30, '', true, 0);
							}
						}
					}
					$pdf->MultiCell(0, 5, ' ', 'B', 'L', false, 1, '', $pdf->getY()-2, true, 0);
					$pdf->setY($pdf->getY()+2);
				}
			}
		}

		//FOOTER
		$pdf->SetFont('freesans', '', 9);
		if(($pdf->getPage() == $page) && ($pdf->getY() < 200)) {
			$pdf->MultiCell(105, 0, $footer, 0, 'L', false, 0, '', '', $reseth=true, $stretch=0, $ishtml=true);
		} else {
			$pdf->AddPage();
			$pdf->MultiCell(180, 0, $footer, 0, 'L', false, 0, '', '', $reseth=true, $stretch=0, $ishtml=true);
		}
	}

	$i = 1;
	$lastPage = $pdf->getNumPages();
	while($i <= $lastPage) {
		$pdf->setPage($i);

		if(!$quoteid) {
			sample($pdf, strtoupper($this->translate('DOCUMENTS_SAMPLE')));
		}

		if($this->quote['state'] == 7) {
			cancelled($pdf, strtoupper($this->translate('DOCUMENTS_CANCELLED')));
		}
		if($i > 1) {
			if(isset($logo)) {
				$pdf->Image($logo, 155, 10, 40, 0, '', $website);
			}

			$y = $pdf->GetY();
			$pdf->SetY(20);

			//New page info box
			$pdf->setCellPaddings(1, 1, 0, 0);
			$pdf->SetFont('freesans', '', 8);
			$pdf->Write(0, $this->translate('DOCUMENTS_QUOTE_ID').' ');
			$pdf->SetFont('freesansb', 'B', 8);
			if($quoteid) $pdf->Write(0, $quoteid.'   ');
			else $pdf->Write(0, ' - - - - -  ');
			$pdf->SetFont('freesans', '', 8);
			$pdf->Write(0, $this->translate('DOCUMENTS_QUOTE_DATE').' ');
			$pdf->SetFont('freesansb', 'B', 8);
			if($quotedate) $pdf->Write(0, $quotedate.'   ');
			else $pdf->Write(0, ' - - - - -  ');
			$pdf->SetFont('freesans', '', 8);
			$pdf->Write(0, $this->translate('DOCUMENTS_CUSTOMER_ID').' ');
			$pdf->SetFont('freesansb', 'B', 8);
			$pdf->Write(0, $contactid);
			$pdf->ln();

			$pdf->setCellPaddings(1, 0, 0, 0);

			$pdf->SetFont('freesansb', 'B', 8);

			//POSITIONS HEADER
			$pdf->Cell(10, 5, $this->translate('DOCUMENTS_POSITION'), 'LTB');
			$pdf->setCellPaddings(0, 0, 0, 0);
			$pdf->Cell(98, 5, $this->translate('DOCUMENTS_DESCRIPTION'), 'TB');
			$pdf->Cell(10, 5, $this->translate('DOCUMENTS_QUANTITY'), 'TB');
			$pdf->Cell(12, 5, $this->translate('DOCUMENTS_UOM'), 'TB', 0, 'C');
			$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_SINGLE'), 'TB', 0, 'C');
			$pdf->Cell(25, 5, $this->translate('DOCUMENTS_PRICE_TOTAL'), 'TBR', 0, 'C');
			$pdf->ln(5);
		}

		$pdf->setCellPaddings(0, 2, 0, 2);
		$pdf->SetAutoPageBreak(false);
		$pdf->SetFont('freesans', '', 7);

		//Footer
		$x = 12;
		$pdf->SetY(270);
		foreach($this->footers as $footer) {
			$width = $footer->width ? $footer->width : 40;
			$pdf->MultiCell($width, 3, $footer->text, 0, 'L', false, 0, $x);
			$x += $width;
		}

		// Page number
		$pdf->SetY(284);
		$pdf->SetFont('helvetica', 'I', 8);
		$pdf->Cell(0, 10, $this->translate('DOCUMENTS_PAGE').' '.$pdf->getAliasNumPage().'/'.$pdf->getAliasNbPages(), 0, false, 'C', 0, '', 0, false, 'T', 'M');
		$pdf->SetFont('freesans', '', 8);

		$pdf->SetAutoPageBreak(true, 30);

		$pdf->SetY($y);
		++$i;
	}
}

//Close and output PDF document
if($this->action == 'download') {
	if($quoteid) $pdf->Output($filename, 'D');
	else $pdf->Output($this->translate('DOCUMENTS_SAMPLE').'_Angebot_'.$billingName1.'.pdf', 'D');
} elseif($this->contact) {
	$path = BASE_PATH.'/files/contacts/';
	$dir1 = substr($client['id'], 0, 1);
	if(strlen($client['id']) > 1) $dir2 = substr($client['id'], 1, 1);
	else $dir2 = '0';
	$dir3 = substr($this->contact['id'], 0, 1).'/';
	if(strlen($this->contact['id']) > 1) $dir4 = substr($this->contact['id'], 1, 1).'/';
	else $dir4 = '0/';
	$url = $dir1.'/'.$dir2.'/'.$client['id'].'/'.$dir3.'/'.$dir4.'/'.$this->contact['id'].'/';
	if($quoteid) {
		if(!file_exists($path.$url.$filename))
			$pdf->Output($path.$url.$filename, 'F');
		$html = '<iframe src="'.$this->baseUrl().'/files/contacts/'.$url.$filename.'?'.time().'" width="900px" height="500px">';
	} else {
		$pdf->Output(BASE_PATH.'/cache/quote/'.$id.'.pdf', 'F');
		$html = '<p><a href="#" onclick="savePdf()">'.$this->translate('QUOTES_SAVE_AND_BOOK').'></a> |
		<a href="'.$this->url(array('module'=>'sales', 'controller'=>'quote', 'action'=>'download', 'id'=>$id)).'" target="_blank">'.$this->translate('QUOTES_DOWNLOAD_PDF').'</a></p>
		<iframe src="'.$this->baseUrl().'/cache/quote/'.$id.'.pdf?'.time().'" width="900px" height="500px"><br/>';
	}
	echo $html;
} else {
	echo '<p><strong>'.$this->translate('DOCUMENTS_THERE_IS_NO_CONTACT').'</strong></p><br/>';
}

function childPositions($position, $pdf, $i) {
			$x = $pdf->getX();
			$pdf->setCellPaddings(0, 2, 0, 0);
			$pdf->SetFont('freesans', '', 9);
			$pdf->MultiCell(10, 0, $i, 0, 'C', false, 0, $x, '', true, 0);
			$pdf->MultiCell(10, 0, $position->quantity, 0, 'C', false, 0, $x+108, '', true, 0);
			if($position->uom) $pdf->MultiCell(12, 0, $position->uom, 0, 'C', false, 0, $x+118, '', true, 0);
			$pdf->MultiCell(25, 0, $position->price, 0, 'C', false, 0, $x+130, '', true, 0);
			$pdf->MultiCell(25, 0, $position->total, 0, 'C', false, 0, $x+155, '', true, 0);
			$pdf->MultiCell(108, 0, $position->sku, 0, 'L', false, 2, $x+10, '', true, 0);
			$pdf->setCellPaddings(0, 0, 0, 0);
			if($position->title) {
				$pdf->MultiCell(108, 0, $position->title, 0, 'L', false, 2, $x+10, '', true, 0);
			}
			if($position->image && file_exists(BASE_PATH.'/files/images/'.$position->image)) {
				$startPage = $pdf->getPage();
				$y = $pdf->getY();
				$pdf->Image(BASE_PATH.'/files/images/'.$position->image, $x+10, '', 30, 0, '', '', 'N');
				$endPage = $pdf->getPage();
				if($startPage == $endPage) {
					$imageHeight = $pdf->getY() - $y;
				} else {
					$imageHeight = $pdf->getY() + $pdf->getPageHeight() - $y - 60;
					$pdf->setPage($startPage);
				}
				if($position->description) {
					$pdf->MultiCell(65, $imageHeight, $position->description, 0, 'L', false, 1, $x+43, $y, true, 0);
				}
			} elseif($position->description) {
				$pdf->MultiCell(98, 0, $position->description, 0, 'L', false, 1, $x+10, '', true, 0);
			}
			$pdf->MultiCell(0, 5, ' ', 'B', 'L', false, 1, '', $pdf->getY()-2, true, 0);
			++$i;
}

function sample($pdf, $txt) {
	// set alpha to semi-transparency
	$pdf->SetAlpha(0.5);
	$pdf->SetTextColor(225, 225, 225);
	$y = $pdf->GetY();
	$width = $pdf->GetX();
	$pdf->setY(140);
	$pdf->SetFont('helvetica', 'B', 75);
	$pdf->Write(0, $txt, '', false, 'C');
	//$pdf->Cell(0, 200, $txt, 0, false, 'C', 0, '', 0, false, 'T', 'M');
	$pdf->SetY($y);
	$pdf->setX($width);
	$pdf->SetTextColor(0, 0, 0);
	// restore full opacity
	$pdf->SetAlpha(1);
}

function cancelled($pdf, $txt) {
	// set alpha to semi-transparency
	$pdf->SetAlpha(0.5);
	$pdf->SetTextColor(225, 225, 225);
	$y = $pdf->GetY();
	$width = $pdf->GetX();
	$pdf->setY(140);
	$pdf->SetFont('helvetica', 'B', 75);
	$pdf->Write(0, $txt, '', false, 'C');
	$pdf->SetY($y);
	$pdf->setX($width);
	$pdf->SetTextColor(0, 0, 0);
	// restore full opacity
	$pdf->SetAlpha(1);
}
